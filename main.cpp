#include "geometry2d.h"
#include <iostream>
#include <string>

#ifdef _WIN32 // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ Windows. –ï—Å–ª–∏ –ù–ï–¢, —Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –¥–ª—è Windows –æ—Ç–∫–ª—é—á–∞—é—Ç—Å—è
#include <windows.h>
#include <cstdlib>
#else
#include <cstdlib>
#endif

// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ–Ω—Å–æ–ª–∏
void clearScreen() {
#ifdef _WIN32
    system("cls");
#else
    system("clear");
#endif


}
int main() {
    #ifdef _WIN32
        system("chcp 65001 > nul"); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç UTF-8
    #endif

    Geometry2D geom;

    std::string bmpFile = "input.bmp"; //–ú–æ–Ω–æ—Ö—Ä–æ–º–Ω—ã–π bmp –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ txt
    std::string txtFile = "output.txt"; // –§–∞–π–ª —Å –±—É–ª–µ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ (–µ–¥–∏–Ω–∏—Ü—ã - –∏—Å—Å–ª–µ–¥—É–µ–º–∞—è –æ–±–ª–∞—Å—Ç—å)
    std::string svgFile = "output.svg"; // –§–∞–π–ª —Å –≤–µ—Ç–æ—Ä–Ω–æ–π –≥—Ä–∞—Ñ–∏–∫–æ–π

    std::cout << "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Geometry2D Converter!\n";

    while (true) {
        std::cout << "\n=========================================\n";
        std::cout << "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n";
        std::cout << "1. –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ BMP –≤ TXT\n";
        std::cout << "2. –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å TXT –≤ SVG\n";
        std::cout << "0. –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É\n";
        std::cout << "–ü–†–ò–ú–ï–ß–ê–ù–ò–ï! –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—É—Ç–µ–π —Ñ–∞–π–ª–æ–≤ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é, –≤–≤–æ–¥–∏—Ç–µ 'def'\n";
        std::cout << "=========================================\n";

        std::string inputNumber;
        std::cout << "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: ";
        std::cin >> inputNumber;

        if (inputNumber == "1") {
            std::cout << "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ BMP —Ñ–∞–π–ª—É: ";
            std::cin >> bmpFile;
            std::cout << "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è TXT: ";
            std::cin >> txtFile;
            if (bmpFile == "def") bmpFile = "input.bmp";
            if (txtFile == "def") txtFile = "output.txt";

            if (geom.readBMPAndSaveAsTXT(bmpFile, txtFile)) {
                std::cout << "\n‚úÖ  BMP —É—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ TXT!\n";
            } else {
                std::cout << "\n‚ùå  –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ BMP –≤ TXT.\n";
            }
        } else if (inputNumber == "2") {
            std::cout << "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ TXT —Ñ–∞–π–ª—É: ";
            std::cin >> txtFile;
            std::cout << "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è SVG: ";
            std::cin >> svgFile;
            if (txtFile == "def") txtFile = "output.txt";
            if (svgFile == "def") svgFile = "output.svg";

            if (geom.convertTXTToSVG(txtFile, svgFile)) {
                std::cout << "\n‚úÖ  TXT —É—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ SVG!\n";
            } else {
                std::cout << "\n‚ùå  –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ TXT –≤ SVG.\n";
            }
        } else if (inputNumber == "0") {
            std::cout << "\nüëã  –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n";
            break;
        } else {
            std::cout << "\n‚ö†Ô∏è  –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n";
        }

        std::cout << "\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
        std::cin.ignore();
        std::cin.get();

        clearScreen();
    }

    return 0;
}

// 1. –°–¥–µ–ª–∞—Ç—å –æ—á–∏—Å—Ç–∫—É –∫–æ–Ω—Å–æ–ª–∏ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π ------------------- –†–ï–®–ï–ù–û
// 2. –£–ª—É—á—à–∏—Ç—å –±–ª–æ–∫, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (–Ω–µ–∫—Ä–∞—Å–∏–≤–æ –∫–∞–∫-—Ç–æ) ---- –†–ï–®–ï–ù–û
// 3. –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ tkinter------------------ –û—Ç–º–µ–Ω–∞, —Ç—Ä—É–¥–Ω–æ –±—É–¥–µ—Ç —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å –≤ –æ–¥–∏–Ω —ç–∫–∑